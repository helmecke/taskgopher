name: Checks

on:
  push:
    paths:
      - "go.sum"
      - "go.mod"
      - "**.go"
      - ".github/workflows/checks.yml"
      - ".golangci.yml"
  pull_request:

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  tidy:
    name: Tidy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Tidy
        shell: bash
        run: |
          go mod tidy
          STATUS=$(git status --porcelain)
          if [ ! -z "$STATUS" ]; then
            echo "Unstaged files:"
            echo $STATUS
            echo "Run 'go mod tidy' and commit them"
            exit 1
          fi
  test:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x, 1.18.x ]
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run tests with coverage
        run: go test -v -race -coverprofile=coverage -covermode=atomic ./...
